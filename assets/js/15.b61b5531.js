(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{362:function(e,n,i){"use strict";i.r(n);var o=i(43),a=Object(o.a)({},(function(){var e=this,n=e.$createElement,i=e._self._c||n;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"configuration"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[e._v("#")]),e._v(" Configuration")]),e._v(" "),i("ul",[i("li",[e._v("Central way of defining values that are loade upon starting the application (should not be changed during runtime)")]),e._v(" "),i("li",[e._v("Configurtion per environment - development, staging, production etc.")]),e._v(" "),i("li",[e._v("Configuration can be defined in the code base. Useful if you work with multiple developers via version control. Your configuration should always work for with code it ships with.")]),e._v(" "),i("li",[e._v("Can be definedd in mnyy ways (JSON, YAML, XML, Environment Variiables, etc), using custom solutions or open-source libraries.")])]),e._v(" "),i("h2",{attrs:{id:"codebase-vs-environment-variables"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#codebase-vs-environment-variables"}},[e._v("#")]),e._v(" Codebase vs environment variables")]),e._v(" "),i("ul",[i("li",[e._v("You coul define configuration in your codebase. For example, in config folder.\nYou could also support configuring values via enviroment variables (which are provided when running the application).")])]),e._v(" "),i("p",[e._v("Example:")]),e._v(" "),i("p",[e._v("Non-sensitive information such as the port to run the application on, will be define in the code base.")]),e._v(" "),i("p",[e._v("Sensitive information such as database usrname and password for production mode, will be provided via environment variables upon running the application.")])])}),[],!1,null,null,null);n.default=a.exports}}]);