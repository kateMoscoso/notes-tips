(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{207:function(e,a,t){"use strict";t.r(a);var n=t(0),r=Object(n.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"install"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[e._v("#")]),e._v(" Install")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  https://docs.docker.com/engine/install/ubuntu/\n")])])]),t("h2",{attrs:{id:"run-hello-world"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#run-hello-world"}},[e._v("#")]),e._v(" Run hello world")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker run hello-world\n")])])]),t("p",[e._v("La arquitectura de Docker funciona cliente - servidor y además utiliza "),t("code",[e._v("daemon")]),e._v(" al conectarse con los contenedores.")]),e._v(" "),t("p",[e._v("Client --\x3e  daemon --\x3e containers")]),e._v(" "),t("h2",{attrs:{id:"contenedores"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contenedores"}},[e._v("#")]),e._v(" Contenedores")]),e._v(" "),t("p",[e._v("Un "),t("code",[e._v("contenedor")]),e._v(" es una entidad lógica, una agrupación de procesos que se ejecutan de forma nativa como cualquier otra aplicación en la máquina host.")]),e._v(" "),t("p",[e._v("Un contenedor ejecuta sus procesos de forma nativa. Lo único que comparte el contenedor con la máquina es el "),t("code",[e._v("kernel")]),e._v(" del sistema operativo")]),e._v(" "),t("p",[e._v("https://itnext.io/chroot-cgroups-and-namespaces-an-overview-37124d995e3d")]),e._v(" "),t("ul",[t("li",[e._v("Para listar todos los contenedores de Docker, utilizamos el comando:")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker ps -a\n")])])]),t("ul",[t("li",[e._v("Podemos inspeccionar un contenedor en específico utilizando:")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker inspect nombreDelContenedor\n")])])]),t("ul",[t("li",[e._v("Usando filtros")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker inspect -f '{{ json .Config.Env }}' nombreDelContenedor\n")])])]),t("ul",[t("li",[e._v("Renombrar contenedores")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker rename oldName newName\n")])])]),t("ul",[t("li",[e._v("no se pueden repetir los nombres pero si los id")]),e._v(" "),t("li",[e._v("cada docker run genera un contenedor nuevo")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker logs nombre_contenedor\ndocker ps -aq // lista id contaniers\ndocker rm -f $(docker ps -aq) // borra dockers de la lista\n")])])]),t("ul",[t("li",[e._v("Levantar imagen de ubuntu")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker run ubuntu\ndocker run -it ubuntu // hacerlo de forma interactiva con la terminal\n")])])]),t("ul",[t("li",[e._v("Comandos dentro de la imagen ubuntu")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("ls -lac\nuname -a\ncat /etc/lsb-release\nexit\n")])])]),t("h2",{attrs:{id:"ciclo-de-vida-de-los-contenedores"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ciclo-de-vida-de-los-contenedores"}},[e._v("#")]),e._v(" Ciclo de vida de los contenedores")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker run ubuntu tail -f /dev/null\n")])])]),t("ul",[t("li",[e._v("Meterte dentro del contenedor")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker exec -it nombre_contenedor bash\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("ps -fea  // ver pid\ndocker rm -f nombre_contenedor // borra contenedor\ndocker kill nombre_contenedor // matar contenedor\n")])])]),t("h2",{attrs:{id:"exponiendo-contenedores-al-mundo-exterior"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exponiendo-contenedores-al-mundo-exterior"}},[e._v("#")]),e._v(" Exponiendo contenedores al mundo exterior")]),e._v(" "),t("p",[e._v("Debemos redirigir los puertos del contenedor a los de la computadora y lo podemos hacer al utilizar este comando:")]),e._v(" "),t("p",[e._v("--detach // si tiene un proceso que tiene output, no me interesa el output")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker run -d --name server -p 8080:00  nombreDelContenedor\n\ndocker run -d --name server nginx\n\ndocker run -d --name server -p 8080:80 nginx //-p publish\n")])])]),t("h2",{attrs:{id:"levantar-base-de-datos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#levantar-base-de-datos"}},[e._v("#")]),e._v(" Levantar base de datos")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker run -d --name db mongo\ndocker exec -it db bash\n")])])]),t("ul",[t("li",[e._v("Montar sistema de Archivos al contenedor.")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("mkdir mongodata // crear carpeta\nll //listar\npwd //encontrat directorio carpeta\ndocker run -d --name db -v directorio-mi-ordenador:dondequieroquesemonte-contenedor mongo\ndocker run -d --name db -v /home/kate/docker/mongo-data:/data/db mongo\ndocker inspect -f '{{ json .Config.Volumes }}' db\ndocker inspect -f '{{ json .Mounts }}' db\n")])])]),t("p",[e._v("El sistema escribe en el sistema operativo y así cuando se mate el contenedor esta información no se pierde.")]),e._v(" "),t("h2",{attrs:{id:"docker-volumes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-volumes"}},[e._v("#")]),e._v(" Docker "),t("a",{attrs:{href:"https://docs.docker.com/storage/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Volumes"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("Esta herramienta nos permite recuperar datos que podíamos dar por perdido.")]),e._v(" "),t("p",[e._v("Existen tres maneras de hacer permanencia de datos:")]),e._v(" "),t("p",[e._v("Bind mount\nVolume\ntmpfs mount")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" docker volume ls\n docker volume prune // limpiar volumenes que no estan usando lo contenedores\n docker volume create dbdata\n docker run -d --name db --mount src=nombrevolume,dst=dondemontar mongo\n docker run -d --name db --mount src=dbdata,dst=/data/db mongo\n docker exec -it db bash\n mongo\n exit\n")])])]),t("h2",{attrs:{id:"imagenes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#imagenes"}},[e._v("#")]),e._v(" Imagenes")]),e._v(" "),t("p",[e._v("Imágenes son fundamentalmente plantillas o templates. Una imagen esta construida sobre ua una capa base y capas por encima")]),e._v(" "),t("ul",[t("li",[e._v("Obtener iamages")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker pull redis\ndocker image ls\n")])])]),t("p",[e._v("repositorios de docker https://hub.docker.com/")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker pull ubuntu:18.04\n")])])]),t("p",[e._v("Para  crear nuestras propias imágenes, necesitamos un archivo llamado DockerFile que es lo que utiliza Docker para crear imágenes.")]),e._v(" "),t("p",[e._v("**Es importante que el DockerFile siempre empiece con un ““FROM”” sino, no va a funcionar. **")]),e._v(" "),t("p",[e._v("El flujo para construir en Docker siempre es así:\nDockerfile –> **build ** –> Imágen –> run --\x3e Contenedor")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker build -t ubuntu:test .\ndocker run -it ubuntu:test .\nls -lac /usr/src\ndocker tag ubuntu:test nilya4/ubuntu:test\ndocker push nilya4/ubuntu:test\n")])])]),t("ul",[t("li",[e._v("Historico imagen")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" docker history ubuntu:test\n")])])]),t("p",[e._v("https://github.com/wagoodman/dive")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" dive ubuntu:test\n ctrl+u\n")])])]),t("h2",{attrs:{id:"dockerfile-node"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-node"}},[e._v("#")]),e._v(" Dockerfile node")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('FROM node:8\n\nCOPY ["package.json","package-lock.json", "/usr/src/"]\n\nWORKDIR /usr/src\n\nRUN npm install\n\nCOPY [".", "/usr/src/"]\n\nEXPOSE 3000\n\nCMD ["node", "index.js"]\n\n')])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker build -t app .\ndocker run --rm -p 3000:3000 app\n")])])]),t("ul",[t("li",[e._v("Nodemon")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('CMD ["npx", "nodemon", "index.js"]\n\ndocker run --rm -p 3000:3000 {{path}}:/usr/src testapp\n')])])]),t("ul",[t("li",[e._v("Docker networking\nColaboración entre contenedores")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" docker network ls\n docker network create --attachable  testnet\n")])])]),t("p",[t("code",[e._v("--attachable")]),e._v(" permitir que otros contenedores se conecten a esta red")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(" docker run -d --name db mongo\n docker network connect testnet db\n docker run -d --name app -p 3000:3000 --env MONGO_URL=mongodb//db:27017/test testapp\n docker network connect testnet app\n docker network rm testnet\n")])])]),t("ul",[t("li",[t("p",[e._v("Docker compose\nEs una herramienta que nos permite describir de forma declarativa la arquitectura de nuestra aplicación, utiliza "),t("strong",[e._v("composefile")]),e._v(" (docker-compose.yml).")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://docs.docker.com/compose/install/#install-compose",target:"_blank",rel:"noopener noreferrer"}},[e._v("install"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://docs.docker.com/compose/compose-file/compose-versioning/",target:"_blank",rel:"noopener noreferrer"}},[e._v("version"),t("OutboundLink")],1),e._v("  // version > 2")])]),e._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://docs.docker.com/compose/startup-order/",target:"_blank",rel:"noopener noreferrer"}},[e._v("start"),t("OutboundLink")],1)])]),e._v(" "),t("li",[t("p",[e._v("Services -> componentes de la aplicación, pueden tener mas de un contenedor")])]),e._v(" "),t("li",[t("p",[e._v("image, nombre de la imagen")])]),e._v(" "),t("li",[t("p",[e._v("depende_on, depende de otro servicio")])]),e._v(" "),t("li",[t("p",[e._v("ports: puerto")])])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('version:  "3"\nservices:\n  app: \n    image: testapp\n    enviroment:\n      MONGO_URL: "mongodb//db:27017/test"\n    depends_on:\n      - db\n    ports:\n      - "3000:3000"\n  db:\n    image: mongo\n')])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("docker-compose up\ndocker-compose ls\ndocker-compose logs app\ndocker-compose exec app bash\ndocker-compose down\n")])])]),t("p",[t("em",[e._v("Notes:")]),e._v(" "),t("em",[e._v("Docker esta escrito en "),t("strong",[e._v("GO")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);